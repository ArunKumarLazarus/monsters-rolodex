{"version":3,"sources":["component/card/card.component.jsx","component/card-list/cards-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","username","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchFiled","target","value","state","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAGaA,EAAK,SAAAC,GAAK,OACnB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,+BAAKL,EAAMI,QAAQE,KAAnB,MAA4BN,EAAMI,QAAQG,YAC1C,4BAAIP,EAAMI,QAAQI,YCHTC,EAAS,SAAAT,GAAK,OAC3B,qBAAKC,UAAU,YAAf,SAA4BD,EAAMU,SAASC,KAAI,SAAAP,GAAO,OAClD,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCHVO,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACnB,uBAAOb,UAAU,SAASc,KAAK,SAC9BF,YAAaA,EACZG,SAAUF,MCuCDG,E,kDAnCb,aAAc,IAAD,8BACX,gBAeFH,aAAa,SAAAI,GAEX,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAfpC,EAAKC,MAAM,CACXb,SAAS,GACTU,YAAY,IAEd,EAAKN,aAAa,EAAKA,aAAaU,KAAlB,gBAPL,E,qDAUb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKV,SAAS,CAACT,SAASmB,S,oBAQvC,WAAS,IAAD,EACsBC,KAAKP,MAA3Bb,EADA,EACAA,SAASU,EADT,EACSA,YACTW,EAAiBrB,EAASsB,QAAO,SAAA5B,GAAO,OAAEA,EAAQE,KAAK2B,cAAcC,SAASd,EAAYa,kBAChG,OACA,sBAAKhC,UAAU,MAAf,UACA,cAAC,EAAD,CACAY,YAAY,kBACZC,aAAcgB,KAAKhB,eAEnB,cAAC,EAAD,CAAUJ,SAAUqB,W,GA/BNI,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a29fd32f.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../card/card.styles.css';\r\n\r\nexport const Card=props=>(\r\n    <div className='card-container'>\r\n    <img alt=\"moster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n    <h2>{props.monster.name} - {props.monster.username}</h2>\r\n    <p>{props.monster.email}</p>\r\n    </div>\r\n    \r\n)","import React from 'react';\r\nimport './cards-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList=props=>(\r\n<div className='card-list'>{props.monsters.map(monster=>(\r\n    <Card key={monster.id} monster={monster} />\r\n  ))\r\n }</div>);","import React from 'react';\r\nimport '../search-box/search-box.styles.css';\r\n\r\nexport const SearchBox=({placeholder,handleChange})=>(\r\n    <input className='search' type='search'\r\n     placeholder={placeholder}\r\n      onChange={handleChange}\r\n      />\r\n)","import React,{Component} from 'react';\n\nimport './App.css';\nimport {CardList} from './component/card-list/cards-list.component.jsx';\nimport {SearchBox} from './component/search-box/search-box.component.jsx';\n\n\n\n\nclass App extends Component{\n  constructor(){\n    super();\n    // this.state={string:'Arun'};\n    this.state={\n    monsters:[],\n    searchFiled:''\n  };\n  this.handleChange=this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}));\n  }\n\n  handleChange=e=>\n  {\n    this.setState({searchFiled:e.target.value})\n  }\n\n  render(){\n    const{monsters,searchFiled}=this.state;\n    const filteredMonsters=monsters.filter(monster=>monster.name.toLowerCase().includes(searchFiled.toLowerCase()));\n    return(\n    <div className=\"App\">\n    <SearchBox\n    placeholder='search monsters'\n    handleChange={this.handleChange}\n    />\n    <CardList monsters={filteredMonsters}/>\n    </div>\n    );\n  }\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}